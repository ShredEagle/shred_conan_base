from conans import ConanFile, tools
from conan.tools.cmake import CMake, cmake_layout

from os import path


class ShredBaseConanFile(object):


    scm = {
        "type": "git",
        "url": "auto",
        "revision": "auto",
        "submodule": "recursive",
    }


    def _generate_cmake_configfile(self):
        """ Generates a conanuser_config.cmake file to forward options to CMake."""
        """ This is currently preferred to CMakeToolchain variables, because of workspaces. """
        """ see: https://github.com/conan-io/conan/issues/11944 """
        with open("conanuser_config.cmake", "w") as config:
            config.write("message(STATUS \"Including user generated conan config.\")\n")
            # avoid path.join, on Windows it outputs '\', which is a string escape sequence.
            config.write("set({} {})\n".format("BUILD_tests", self.options.build_tests))
            config.write("set({} {})\n".format("BUILD_CONF_WarningAsError", self.conf.get("user.shred.build:warning_as_error", default="False")))


    def _configure_cmake(self):
        cmake = CMake(self)
        cmake.configure()
        return cmake


    def layout(self):
        # Otherwise, root is the folder containing conanfile.py
        self.folders.root = ".."
        # Handles single-config (with subfolders) and multi-config (in a common folder)
        cmake_layout(self)


    def configure(self):
        tools.check_min_cppstd(self, "20")


    def generate(self):
        self._generate_cmake_configfile()


    def build(self):
        cmake = self._configure_cmake()
        cmake.build()


    def package(self):
        cmake = self._configure_cmake()
        cmake.install()


    def package_info(self):
        # Disable the config package that would otherwise be generated by CMakeDeps
        self.cpp_info.set_property("cmake_find_mode", "none")
        # Find CMake-generated package config when consuming the (installed) conan package
        self.cpp_info.builddirs = [path.join("lib", "cmake")]


class ShredConanBase(ConanFile):
    name = "shred_conan_base"
